{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","player","calculateWinner","generateSquare","setState","nextPlayer","concat","move","desc","jumpTo","Array","fill","slice","status","confeti","winner","moves","push","getMoves","length","active","config","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","colors","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1a66241.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Confetti from 'react-dom-confetti';\n\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n    {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return <Square value={this.props.squares[i]}\n                   onClick={() => this.props.onClick(i)}/>;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [],\n      player: 'X',\n    };\n  }\n\n  handleClick(i) {\n    if (calculateWinner(this.generateSquare())) {\n      return;\n    }\n\n    // check if square was already filled\n    if (this.generateSquare()[i] != null) {\n      return;\n    }\n\n    this.setState({player: this.nextPlayer(this.state.player),\n                  history: this.state.history.concat({\"player\": this.state.player,\n                                                      \"position\": i})\n    });\n  }\n\n  nextPlayer(player){\n    if (player == \"X\")\n      return \"O\";\n    return \"X\";\n  }\n\n  getMoves(move, desc){\n    return (\n      <li>\n        <button onClick={() => this.jumpTo(move)}>{desc}</button>\n      </li> \n    )\n  }\n\n  generateSquare(){\n    let squares = Array(9).fill(null);\n\n    for (let move of this.state.history){\n      squares[move[\"position\"]] = move[\"player\"];\n    }\n    return squares;\n  }\n\n  jumpTo(move) {\n    this.setState({history: this.state.history.slice(0,move+1),\n                  player: this.nextPlayer(this.state.history[move][\"player\"])})\n  }\n  render() {\n    const config = {\n      angle: 90,\n      spread: 45,\n      startVelocity: 45,\n      elementCount: 50,\n      dragFriction: 0.1,\n      duration: 3000,\n      stagger: 0,\n      width: \"10px\",\n      height: \"10px\",\n      colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n    };\n    const winner = calculateWinner(this.generateSquare());\n    let status;\n    let confeti;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n      confeti = true;\n      \n    } else {\n      status = 'Next player:' + this.nextPlayer(this.state.player);\n    }\n    let moves = [];\n    moves.push(this.getMoves(-1, \"Go to start\"))\n    for (var i = 0; i < this.state.history.length; i++) {\n      moves.push(this.getMoves(i, \"Player \" + this.state.history[i][\"player\"] + \" at position \" + this.state.history[i][\"position\"]));\n    };\n\n    return (\n      <div className=\"game\">\n        <Confetti active={confeti} config={ config } />\n        <div className=\"game-board\">\n          <Board \n            squares={this.generateSquare()} \n            onClick={(i) => this.handleClick(i)}/>\n        </div>\n        <div className=\"game-info\">\n          <div className=\"status\">{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}